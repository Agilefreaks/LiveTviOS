//
//  LiveChannelsInteractorTests.swift
//  LiveTV
//
//  Created by Mihai Pantiru on 06/03/2017.
//  Copyright (c) 2017 AgileFreaks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import LiveTV
import XCTest

class LiveChannelsInteractorTests: XCTestCase {
    // MARK: - Subject under test

    var sut: LiveChannelsInteractor!

    // MARK: - Test lifecycle

    override func setUp() {
        super.setUp()
        setupLiveChannelsInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: - Test setup

    func setupLiveChannelsInteractor() {
        sut = LiveChannelsInteractor()
    }

    // MARK: - Define spy
    
    class LiveChannelsInteractorOutputSpy: LiveChannelsInteractorOutput {
        var presentLoadResponseCalled = false
        var outputSpy: LiveChannels.Load.Response?

        func presentSomething(response: LiveChannels.Load.Response) {
            presentLoadResponseCalled = true
            outputSpy = response
        }
    }

    class LiveChannelsServiceSpy: ListChannelsServiceProtocol {
        func getLiveChannelsList(success: @escaping ([LiveChannel]) -> Void, failure _: @escaping (Error) -> Void) {
            let data = LiveChannel(name: "test", logoUrl: "test", streamingUrl: "test", title: "test")
            success([data])
        }
    }

    // MARK: - Tests

    func testPerformLoadChannelsReturnsList() {
        let request = LiveChannels.Load.Request()
        let output = LiveChannelsInteractorOutputSpy()

        let service = LiveChannelsServiceSpy()
        sut.inject(service)

        sut.output = output
        sut.perform(request: request)

        assert(output.presentLoadResponseCalled, "Requesting live channels list should ask presenter to do it")
        assert(output.outputSpy != nil, "Requesting live channels list should ask presenter with a non-null value")
        assert(output.outputSpy?.liveChannelsList.count == 1, "Wrong number of channels")
    }
}
