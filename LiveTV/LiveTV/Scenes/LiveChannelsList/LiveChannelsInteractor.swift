//
//  LiveChannelsInteractor.swift
//  LiveTV
//
//  Created by Mihai Pantiru on 06/03/2017.
//  Copyright (c) 2017 AgileFreaks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol LiveChannelsInteractorInput {
    func perform(request: LiveChannels.Load.Request)
}

protocol LiveChannelsInteractorOutput {
    func presentSomething(response: LiveChannels.Load.Response)
}

class LiveChannelsInteractor: LiveChannelsInteractorInput, Injectable {
    var output: LiveChannelsInteractorOutput!

    typealias T = ListChannelsServiceProtocol
    var entityService: ListChannelsServiceProtocol!

    // MARK: - Business logic

    public func perform(request _: LiveChannels.Load.Request) {
        assertDependencies()

        entityService.getLiveChannelsList(success: { [weak self] channelsList in
            guard let strongSelf = self else { return }

            let response = LiveChannels.Load.Response(liveChannelsList: channelsList)
            strongSelf.output.presentSomething(response: response)
        }) { error in
            print("Error on getting channels list from service " + error.localizedDescription)
        }
    }

    // MARK: - Injectable protocol
    func inject(_ injection: ListChannelsServiceProtocol) {
        self.entityService = injection
    }

    func assertDependencies() {
        assert(self.entityService != nil)
    }
}
