//
//  HeroChannelViewController.swift
//  LiveTV
//
//  Created by Mihai Pantiru on 08/03/2017.
//  Copyright (c) 2017 AgileFreaks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import AVKit
import AVFoundation

protocol HeroChannelViewControllerInput {
    func displaySomething(viewModel: HeroChannel.Something.ViewModel)
}

protocol HeroChannelViewControllerOutput {
    func doSomething(request: HeroChannel.Something.Request)
}

class HeroChannelViewController: UIViewController, HeroChannelViewControllerInput, LiveChannelsViewControllerExpandDelegate {
    var output: HeroChannelViewControllerOutput!
    var router: HeroChannelRouter!

    @IBOutlet weak var topImageView: UIImageView!
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var nextOnLabel: UILabel!
    @IBOutlet weak var liveIndicatorLabel: UILabel!

    @IBOutlet weak var avPlayerView: AVPlayerView!

    var videoPlayer: AVPlayer?
    var videoPlayerLayer: AVPlayerLayer?

    // MARK: - Object lifecycle

    override func awakeFromNib() {
        super.awakeFromNib()
        HeroChannelConfigurator.sharedInstance.configure(viewController: self)
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
    }

    // MARK: - Event handling
    func expandChannel(channel: LiveChannel) {
        let request = HeroChannel.Something.Request(liveChannel: channel)
        output.doSomething(request: request)
    }

    // MARK: - Display logic

    func displaySomething(viewModel: HeroChannel.Something.ViewModel) {
        self.titleLabel.text = viewModel.liveChannelviewModel.nameString

        let videoURL = URL(string: viewModel.liveChannelviewModel.streamingURLString)
        let avPlayer = AVPlayer(url: videoURL!)
        let castedLayer = avPlayerView.layer as! AVPlayerLayer
        castedLayer.player = avPlayer
        castedLayer.videoGravity = AVLayerVideoGravityResizeAspectFill
        avPlayer.play()

        avPlayerView.accessibilityIdentifier = "heroChannelPlayerIdentifier"
        avPlayerView.accessibilityValue = "Playing \(viewModel.liveChannelviewModel.nameString)"
    }
}
